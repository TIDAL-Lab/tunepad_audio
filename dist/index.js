function e(e,t=0){const s=parseInt(e);return isNaN(s)?t:s}function t(e,t=0){const s=parseFloat(e);return isNaN(s)?t:s}function s(e){return Date.parse(e)}function i(e,t=!1){if(null==e)return t;if("boolean"==typeof e)return e;{const t=e.toString().toLowerCase();if("true"===t||"t"===t)return!0;if("false"===t||"f"===t)return!1}return t}function a(e,t=""){return e?e.toString():t}function n(e,t,s){return e+s*(t-e)}function r(e){return Math.max(0,Math.pow(10,e/20))}function h(e){return 20*Math.log(e)/Math.LN10}function o(e){return Math.pow(10,e/20)/1.78}function c(e){return o(h(e))}function l(e){return 20*Math.log(1.78*e)/Math.LN10}function u(e){return r(l(e))}function d(e){return u(e/127)}function p(e,t,s){return Math.max(t,Math.min(s,e))}class m{get bpm(){return this._bpm}set bpm(e){this.setTempo(e)}get meter(){return this._meter}set meter(e){this.setTimeSignature(e)}get beatsPerMeasure(){return this._beatsPerMeasure}get beatValue(){return this._beatValue}get key(){return this._key}set key(e){this._key=e}get contextTime(){return this.context.currentTime}get time(){return this.isPaused?this._start:this.contextTime-this._start}get timeString(){let e=""+Math.floor(this.time/60)%60,t=""+Math.round(this.time)%60,s=""+Math.floor(100*this.time)%100;return 1==e.length&&(e=`0${e}`),1==t.length&&(t=`0${t}`),1==s.length&&(s=`0${s}`),`${e}:${t}.${s}`}get beats(){return this.time*this.bpm/60+this._elapsedBeats}get isPaused(){return 0==this._subscribers.size}static init(){return null==m._instance&&(m._instance=new m),m._instance}constructor(){this._start=0,this._elapsedBeats=0,this._bpm=90,this._meter="4/4",this._beatsPerMeasure=4,this._beatValue=4,this._key="C major",this._subscribers=new Set,this._listeners=new Set,this.context=new AudioContext,this._metronomes=new Set,this._timer=-1}addSubscriber(e){this._listeners.add(e)}removeSubscriber(e){this._listeners.delete(e)}isPlaying(e){return this._subscribers.has(e)}play(e){this.isPaused&&(this._start=this.contextTime-this._start),this._subscribers.add(e),this._listeners.add(e)}pause(e){this._listeners.add(e),this.isPlaying(e)&&(this._subscribers.delete(e),this.isPaused&&(this._start=this.contextTime-this._start))}stopAll(){this._elapsedBeats=0,this._start=0,this._subscribers.clear(),this._listeners.forEach((e=>e.onClockReset()))}setTime(e){this._elapsedBeats=e,this._start=0,this._listeners.forEach((e=>e.onClockTimeChange())),this._subscribers.clear()}setTempo(e){if(isNaN(e))return;const t=this.beats;e!=this._bpm&&(this._bpm=Math.max(5,e),this._start=this.contextTime-60*t/this._bpm,this._listeners.forEach((e=>e.onTempoChange())))}setTimeSignature(t){2!=t.split("/").length&&(t="4/4"),this._beatsPerMeasure=e(t.split("/")[0],-1),this._beatValue=e(t.split("/")[1],-1),(this._beatsPerMeasure<0||this._beatValue<0)&&(this._beatsPerMeasure=4,this._beatValue=4);const s=`${this._beatsPerMeasure}/${this._beatValue}`;this._meter!=s&&(this._meter=s,this._listeners.forEach((e=>e.onTimeSignatureChange())))}startMetronome(e){if(this._metronomes.add(e),-1==this._timer){const e=this.contextTime;let t=0;this._metronomes.forEach((e=>e.pulse(0))),this._timer=window.setInterval((()=>{if(0==this._metronomes.size)window.clearInterval(this._timer),this._timer=-1;else{const s=60/this.bpm,i=this.contextTime-e,a=Math.floor(i/s)%this.beatsPerMeasure;a!=t&&(t=a,this._metronomes.forEach((e=>e.pulse(t))))}}),30)}}stopMetronome(e){this._metronomes.delete(e)}isMetronomePlaying(e){return this._metronomes.has(e)}}class f{getChannelData(e){return this.channels[e]}get numberOfChannels(){return this.channels.length}get samples(){return this.channels[0].length}get length(){return this.channels[0].length}get isEmpty(){return this.samples<=0}get duration(){return this.samples/this.sampleRate}get isMono(){return 1===this.channels.length}get isStereo(){return 2===this.channels.length}constructor(e=1,t=44100){this.channels=new Array,this.sampleRate=t;for(let t=0;t<e;t++)this.channels.push(new Float32Array)}appendAudioBuffer(e){if(e.sampleRate!==this.sampleRate)throw"Cannot append to GrowableAudioBuffer due to a sample rate mismatch.";const t=new Array;for(let s=0;s<this.numberOfChannels;s++){const i=new Float32Array(this.channels[s].length+e.length),a=e.getChannelData(s<e.numberOfChannels?s:0);i.set(this.channels[s],0),i.set(a,this.channels[s].length),t.push(i)}return this.channels=t,this}append(e){if(e.sampleRate!==this.sampleRate)throw"Cannot append to GrowableAudioBuffer due to a sample rate mismatch.";const t=new Array;for(let s=0;s<this.numberOfChannels;s++){const i=new Float32Array(this.samples+e.samples),a=e.channels[s<e.numberOfChannels?s:0];i.set(this.channels[s],0),i.set(a,this.channels[s].length),t.push(i)}return this.channels=t,this}static fromBuffer(e){return new f(e.numberOfChannels,e.sampleRate).appendAudioBuffer(e)}static async fromURL(e){const t=m.init().context,s=await fetch(e),i=await s.arrayBuffer(),a=await t.decodeAudioData(i);return f.fromBuffer(a)}clone(){const e=new f(this.numberOfChannels,this.sampleRate),t=new Array;for(let s=0;s<e.numberOfChannels;s++)t.push(new Float32Array(this.channels[s]));return e.channels=t,e}trim(e,t){const s=p(Math.round(e*this.sampleRate),0,this.samples-1),i=p(Math.round(t*this.sampleRate),0,this.samples-1),a=i-s,n=new f(this.numberOfChannels,this.sampleRate);if(a<=0||this.isEmpty)return n;const r=new Array;for(let e=0;e<this.numberOfChannels;e++)r.push(this.channels[e].slice(s,i));return n.channels=r,n}reverse(){const e=this.samples,t=new Array;for(let s=0;s<this.numberOfChannels;s++){t.push(new Float32Array(e));let i=e-1;for(let a=0;a<e;a++)t[s][i]=this.channels[s][a],i--}const s=new f(this.numberOfChannels,this.sampleRate);return s.channels=t,s}toAudioBuffer(){if(this.buffer)return this.buffer;this.buffer=new AudioBuffer({length:this.samples,numberOfChannels:this.numberOfChannels,sampleRate:this.sampleRate});for(let e=0;e<this.numberOfChannels;e++)this.buffer.copyToChannel(this.channels[e],e);return this.buffer}toWAV(){const e=Math.min(2,this.numberOfChannels),t=this.sampleRate,s=2==e,i=this.samples,a=new Int16Array(i*e+23);a[0]=18770,a[1]=17990,a[2]=2*i*e+15&65535,a[3]=(2*i*e+15&4294901760)>>16,a[4]=16727,a[5]=17750,a[6]=28006,a[7]=8308,a[8]=18,a[9]=0,a[10]=1,a[11]=e,a[12]=65535&t,a[13]=(4294901760&t)>>16,a[14]=2*e*t&65535,a[15]=(2*e*t&4294901760)>>16,a[16]=2*e,a[17]=16,a[18]=0,a[19]=24932,a[20]=24948,a[21]=2*i*e&65535,a[22]=(2*i*e&4294901760)>>16;const n=this.channels[0],r=s?this.channels[1]:n;for(let t=0;t<i;t++)for(let s=0;s<e;s++){let i=0===s?n[t]:r[t];i=Math.max(-1,Math.min(1,i)),i=i<0?32768*i:32767*i,a[t*e+s+23]=Math.round(i)}return new Uint8Array(a.buffer)}downloadWAV(e){const t=this.toWAV(),s=new Blob([t],{type:"audio/wav"}),i=URL.createObjectURL(s),a=document.createElement("a");a.href=i,a.download=e,a.click(),URL.revokeObjectURL(i)}toWAVBase64(){const e=this.toWAV();return`data:audio/wav;base64,${btoa(e.toString())}`}}class g{constructor(e,t,s){this.value=1,this.gain=new GainNode(e),this.name=t,this.value=s,this.gain.gain.value=s}connect(e,t){return t==this.name&&(e.level.connect(this.gain),!0)}destroy(){this.gain.disconnect()}updateParameter(e,s){return e==`${this.name}-mod}`&&(this.value=t(s,this.value),this.gain.gain.value=this.value,!0)}}class y{constructor(e,s){this.id=0,this.modulators=new Array,this.connectors=new Array,this.context=e,this.id=parseInt(s.id),this.level=e.createGain();const i=t(s.level,0);this.level.gain?.setValueAtTime(r(i),0),this.level.gain.value=r(i),this.addModulator("gain",t(s["gain-mod"],1),this.level.gain)}connect(e,t){for(let s of this.modulators)if(s.connect(e,t))return;"level"==t?e.level.connect(this.level.gain):e.level.connect(this.level)}addConnector(e){this.connectors.push(e),this.level?.connect(e.level)}addModulator(e,t,s){const i=new g(this.context,e,t);i.gain.connect(s),this.modulators.push(i)}playNote(e){}releaseNote(){}scheduleNote(e,t,s,i){}cancelNotes(){}destroy(){this.level.disconnect(),this.modulators.forEach((e=>e.destroy())),this.connectors.forEach((e=>e.destroy()))}pitchBend(e){}schedulePitchBend(e,t){}updateParameter(e,s){for(let t of this.modulators)if(t.updateParameter(e,s))return;if("level"==e){const e=t(s,0);this.level.gain?.setValueAtTime(r(e),0),this.level.gain.value=r(e)}}updateConnectorLevel(e,t){this.connectors.forEach((s=>{s.id==e&&s.updateLevel(t)}))}attachAnalyzer(e,t,s){for(let i of this.connectors)i.id==e&&i.attachAnalyzer(t,s)}detachAnalyzer(e){this.connectors.forEach((t=>{t.id==e&&t.detachAnalyzer()}))}getFloatTimeDomainData(e,t,s){this.connectors.forEach((i=>{i.id==e&&i.getFloatTimeDomainData(t,s)}))}}class v extends y{constructor(e,s){super(e,s),this.A=.1,this.D=.1,this.S=1,this.R=.2,this.aShape=5,this.dShape=2,this.rShape=2,this.attackCurve=[],this.decayCurve=[],this.releaseCurve=[],this.A=t(s.A,this.A),this.D=t(s.D,this.D),this.S=t(s.S,this.S),this.R=t(s.R,this.R),this.R=Math.max(this.R,.01),this.aShape=t(s["a shape"],this.aShape),this.dShape=t(s["d shape"],this.dShape),this.rShape=t(s["r shape"],this.rShape),this._attack=e.createGain(),this._decay=e.createGain(),this._release=e.createGain(),this._attack.gain.value=0,this._decay.gain.value=1,this._release.gain.value=1,this._attack.connect(this._decay),this._decay.connect(this._release),this._release.connect(this.level),this._buildCurves()}connect(e,t){e.level.connect(this._attack)}playNote(e){let t=this.context.currentTime;try{this._attack.gain?.cancelScheduledValues(0),this._decay.gain?.cancelScheduledValues(0),this._release.gain?.cancelScheduledValues(0),this.A>0?this._attack.gain?.setValueAtTime(0,t):this._attack.gain?.setValueAtTime(1,t),this._decay.gain?.setValueAtTime(1,t),this._release.gain?.setValueAtTime(1,t),t=this.context.currentTime+.01,this.A>0?this._attack.gain?.setValueCurveAtTime(this.attackCurve,t,this.A):this._attack.gain?.setValueAtTime(1,t),this.D>0?this._decay.gain?.setValueCurveAtTime(this.decayCurve,t+this.A,this.D):this._decay.gain?.setValueAtTime(this.S,t+this.A)}catch(e){console.log("Exception in ADSR playNote $x.")}}releaseNote(){const e=this.context.currentTime;this.R>0?(this._attack.gain?.cancelScheduledValues(e),this._decay.gain?.cancelScheduledValues(e),this._release.gain?.setValueCurveAtTime(this.releaseCurve,e,this.R)):this._release.gain?.setValueAtTime(0,e)}scheduleNote(e,t,s,i){const a=t<0?-t:0;let n=(t=t<0?0:t)+this.context.currentTime;if(this.A>0?this._attack.gain?.setValueAtTime(0,n):this._attack.gain?.setValueAtTime(1,n),this._decay.gain?.setValueAtTime(1,n),this._release.gain?.setValueAtTime(1,n),n+=.01,this.A>0&&this.A>a){const e=this.A-a;this._attack.gain?.setValueCurveAtTime(this.attackCurve,n,e)}else this._attack.gain?.setValueAtTime(1,n);if(this.D>0&&this.A+this.D>a&&s>this.A){const e=a>=this.A?this.D-(a-this.A):this.D,t=a>=this.A?n:n+this.A-a;this._decay.gain?.setValueCurveAtTime(this.decayCurve,t,e),this.A+this.D>s&&this._decay.gain?.cancelScheduledValues(n+s-a)}else this._decay.gain?.setValueAtTime(this.S,Math.max(0,n+this.A+this.D-a));if(s+this.R>a){const e=a>=s?this.R-(a-s):this.R;this._release.gain?.setValueCurveAtTime(this.releaseCurve,n+s-a,e)}else this._release.gain?.setValueAtTime(0,n)}cancelNotes(){super.cancelNotes();const e=this.context.currentTime;this._release.gain?.cancelScheduledValues(e),this._release.gain.value=0,this._attack.gain?.cancelScheduledValues(e),this._attack.gain.value=0,this._decay.gain?.cancelScheduledValues(e),this._decay.gain.value=0}destroy(){super.destroy(),this._attack.disconnect(),this._decay.disconnect(),this._release.disconnect()}updateParameter(e,s){switch(super.updateParameter(e,s),e){case"A":this.A=t(s,this.A);break;case"D":this.D=t(s,this.D);break;case"S":this.S=t(s,this.S);break;case"R":this.R=t(s,this.R);break;case"a shape":this.aShape=t(s,this.aShape);break;case"d shape":this.dShape=t(s,this.dShape);break;case"r shape":this.rShape=t(s,this.rShape)}this.R=Math.max(this.R,.01),this._buildCurves()}_buildCurves(){this._buildAttackCurve(this.aShape),this._buildDecayCurve(this.dShape),this._buildReleaseCurve(this.rShape)}_buildAttackCurve(e){e=p(e,.001,8),this.attackCurve=[];const t=Math.ceil(v.samplesPerSecond*this.A);if(t>0)for(let s=0;s<=t;s++){let i=s/t;i=Math.pow(i,e),this.attackCurve.push(i)}}_buildDecayCurve(e){e=p(e,.001,4),this.decayCurve=[];const t=Math.ceil(v.samplesPerSecond*this.D);if(t>0)for(let s=0;s<=t;s++){let i=s/t;i=1-Math.pow(i,e),this.decayCurve.push((1-this.S)*i+this.S)}}_buildReleaseCurve(e){e=p(e,.001,4),this.releaseCurve=[];const t=Math.ceil(v.samplesPerSecond*this.R);if(t>0)for(let s=0;s<=t;s++){let i=s/t;i=1-Math.pow(i,e),this.releaseCurve.push(i)}}}v.samplesPerSecond=300;class _ extends y{constructor(e,s){super(e,s),this.compressor=e.createDynamicsCompressor(),this.compressor.connect(this.level),this.compressor.threshold.value=t(s.threshold,-24),this.compressor.knee.value=t(s.knee,30),this.compressor.ratio.value=t(s.ratio,12),this.compressor.attack.value=t(s.attack,.003),this.compressor.release.value=t(s.release,.25)}connect(e,t){"audio"===t?e.level.connect(this.compressor):super.connect(e,t)}destroy(){super.destroy(),this.compressor.disconnect()}updateParameter(e,s){super.updateParameter(e,s),"threshold"===e?this.compressor.threshold.value=p(t(s,-24),-100,0):"knee"==e?this.compressor.knee.value=p(t(s,30),0,40):"ratio"==e?this.compressor.ratio.value=p(t(s,12),1,20):"release"==e?this.compressor.release.value=p(t(s,.25),0,1):"attack"==e&&(this.compressor.attack.value=p(t(s,.003),0,1))}}class b{get context(){return this.source.context}constructor(s,i){this.id=0,this.dB=0,this._pre=null,this._analyzers=new Array,this._splitter=null,this._merger=null,this._buffer=null,this.type="",this.source=s,this.id=e(i.id,-1),this.level=new GainNode(this.context),this.dB=t(i.level,0),this.level.gain?.setValueAtTime(r(this.dB),0),this.type=a(i.type,"")}updateLevel(e){this.dB=e,(this._pre??this.level).gain?.setValueAtTime(r(e),0)}destroy(){this.level.disconnect()}attachAnalyzer(e,t,s=-60,i=5){t=p(t,1,6),this._pre=new GainNode(this.context),this._splitter=this.context.createChannelSplitter(t),this._merger=this.context.createChannelMerger(t),this._pre.gain?.setValueAtTime(r(this.dB),0),this.level.gain?.setValueAtTime(1,0),this.source.level.disconnect(this.level),this.source.level.connect(this._pre),this._pre?.connect(this._splitter),this._merger?.connect(this.level);for(let a=0;a<t;a++){let t=new AnalyserNode(this.level.context);this._analyzers.push(t),t.fftSize=e,t.minDecibels=s,t.maxDecibels=i,this._splitter?.connect(t,a,0),t.connect(this._merger,0,a),0==a&&(this._buffer=new Float32Array(t.frequencyBinCount))}}detachAnalyzer(){if(null!=this._pre){this.level.gain?.setValueAtTime(r(this.dB),0),this.source.level.disconnect(this._pre),this._pre?.disconnect(),this._splitter?.disconnect(),this._merger?.disconnect();for(let e of this._analyzers)e.disconnect();this.source.level.connect(this.level),this._pre=null,this._buffer=null,this._splitter=null,this._merger=null,this._analyzers=[]}}getFloatTimeDomainData(e,t){if(e<this._analyzers.length){const s=this._analyzers[e];if(null!=this._buffer&&t.length==this._buffer.length){s.getFloatTimeDomainData(this._buffer);for(let e=0;e<t.length;e++)t[e]+=this._buffer[e]}}}}class w extends y{constructor(e,s){super(e,s),this.csn=e.createConstantSource(),this.csn.offset.value=t(s.signal,1),this.csn.connect(this.level),this.csn.start()}destroy(){super.destroy(),this.csn.stop(),this.csn.disconnect()}updateParameter(e,s){super.updateParameter(e,s),"signal"===e&&this.csn.offset.setValueAtTime(t(s,1),this.context.currentTime)}}class A extends y{constructor(e,s){super(e,s),this.gates=new Array,this.delayTime=.1,this.delayTime=t(s.delay,.1),this.audioIn=e.createGain(),this.delayIn=e.createGain(),this.addModulator("delay",t(s["delay-mod"],.5),this.delayIn.gain)}connect(e,t){"audio"==t?e.level.connect(this.audioIn):"delay"==t?e.level.connect(this.delayIn):super.connect(e,t)}updateParameter(e,s){"delay"==e?(this.delayTime=t(s,this.delayTime),this.gates.forEach((e=>{e.delay.delayTime.linearRampToValueAtTime(this.delayTime,this.context.currentTime+.1)}))):super.updateParameter(e,s)}playNote(e){const t=this.context.createGain();t.gain.value=1,t.gain.setValueAtTime(1,0);const s=this.context.createDelay();s.delayTime.setValueAtTime(this.delayTime,0),this.audioIn.connect(t),this.delayIn.connect(s.delayTime),t.connect(s),s.connect(this.level),this.gates.push({free:-1,gate:t,delay:s}),this._freeGates()}releaseNote(){this._freeGates(),this.gates.forEach((e=>{e.free<0&&(e.free=this.level.context.currentTime)}))}_freeGates(){const e=this.context.currentTime;this.gates=this.gates.filter((t=>!(t.free>=0&&t.free<e)||(t.gate.disconnect(),t.delay.disconnect(),!1)))}scheduleNote(e,t,s,i){const a=this.context.currentTime,n=a+t+s+i,r=this.context.createGain();r.gain.value=0,r.gain.setValueAtTime(0,0),r.gain.setValueAtTime(1,Math.max(a,a+t)),r.gain.setValueAtTime(0,n);const h=this.context.createDelay();h.delayTime.setValueAtTime(this.delayTime,a),this.audioIn.connect(r),this.delayIn.connect(h.delayTime),r.connect(h),h.connect(this.level),this.gates.push({free:n,gate:r,delay:h}),this._freeGates()}destroy(){super.destroy(),this.gates.forEach((e=>{e.gate.disconnect(),e.delay.disconnect()})),this.gates=[],this.audioIn.disconnect(),this.delayIn.disconnect()}cancelNotes(){this.gates.forEach((e=>{e.gate.disconnect(),e.delay.disconnect()})),this.gates=[]}}class T extends y{constructor(e,s){super(e,s),this.param=0,this.curve="tanh",this.param=t(s.param,this.param),this.curve=a(s.curve,this.curve),this.dist=new WaveShaperNode(e),this.dist.curve=this._makeCurve(),this.dist.oversample="4x",this.gain=new GainNode(e),this.gain.gain.value=t(s["pre-gain"],1),this.gain.connect(this.dist),this.dist.connect(this.level)}connect(e,t){"audio"===t?e.level.connect(this.gain):super.connect(e,t)}destroy(){super.destroy(),this.gain.disconnect(),this.dist.disconnect()}updateParameter(e,s){super.updateParameter(e,s),"param"===e?(this.param=t(s,this.param),this.dist.curve=this._makeCurve()):"curve"===e?(this.curve=a(s,this.curve),this.dist.curve=this._makeCurve()):"pre-gain"===e&&(this.gain.gain.value=t(s,1))}_makeCurve(){const e=new Float32Array(512),t=this._curve(this.curve);for(let s=0;s<e.length;s++){const i=N(-1,1,s/(e.length-1));e[s]=t(i,this.param)}return e}_curve(e){switch(e){case"tanh":default:return x;case"sigmoid":return M;case"sin":case"sine":return S;case"steep sin":case"steep sine":return k}}}function x(e,t){const s=6-5*t,i=Math.pow(Math.E,s*e);return(i-1)/(i+1)}function M(e,t){const s=50*t;return(3+s)*e*20*(Math.PI/180)/(Math.PI+s*Math.abs(e))}function S(e,t){const s=1+5*t;return Math.sin(e*(19.8*s)/(2*Math.PI))}function k(e,t){const s=9.9*Math.PI;return N(Math.pow(Math.sin(e*s),5),Math.sin(e*s),t)}function N(e,t,s){return e+s*(t-e)}class V extends y{constructor(e,s){super(e,s),this.tracking=!0,this.ratio=1,this.frequency=350,this.Q=1,this.gain=0,this.detune=0,this.type="lowpass",this.filter=e.createBiquadFilter(),this.filter.connect(this.level),this.Q=p(t(s.Q,1),1e-4,1e3),this.gain=p(t(s.gain,0),-40,40),this.type=a(s["filter type"],"lowpass"),this.detune=t(s.detune,0),this.frequency=p(t(s.frequency,350),0,16700),this.tracking=i(s.tracking,!0),this.ratio=t(s["tracking ratio"],1),this.addModulator("Q",t(s["Q-mod"],1),this.filter.Q),this.addModulator("gain",t(s["gain-mod"],5),this.filter.gain),this.addModulator("frequency",t(s["frequency-mod"],1e3),this.filter.frequency),this.filter.Q.value=this.Q,this.filter.gain.value=this.gain,this.filter.type=this.type,this.filter.detune.value=this.detune,this.filter.frequency.value=this.frequency}playNote(e){const t=this.tracking?e.frequency*this.ratio+this.frequency:this.frequency,s=this.context.currentTime;this.filter.Q?.setValueAtTime(this.Q,s),this.filter.gain?.setValueAtTime(this.gain,s),this.filter.detune?.setValueAtTime(this.detune,s),this.filter.frequency?.setValueAtTime(t,s)}scheduleNote(e,t,s,i){t=t<0?0:t;const a=this.context.currentTime,n=this.tracking?e.frequency*this.ratio+this.frequency:this.frequency;this.filter.Q?.setValueAtTime(this.Q,t+a),this.filter.gain?.setValueAtTime(this.gain,t+a),this.filter.detune?.setValueAtTime(this.detune,t+a),this.filter.frequency?.setValueAtTime(n,t+a)}cancelNotes(){super.cancelNotes(),this.filter.Q?.cancelScheduledValues(0),this.filter.gain?.cancelScheduledValues(0),this.filter.detune?.cancelScheduledValues(0),this.filter.frequency?.cancelScheduledValues(0)}destroy(){super.destroy(),this.filter.disconnect()}connect(e,t){"audio"===t?e.level.connect(this.filter):super.connect(e,t)}updateParameter(e,s){const n=this.context.currentTime;"filter type"===e&&V.FILTERS.includes(s)?(this.type=a(s,"lowpass"),this.filter.type=this.type):"Q"===e?(this.Q=p(t(s,this.Q),1e-4,1e3),this.filter.Q.cancelScheduledValues(0),this.filter.Q.setValueAtTime(this.Q,n),this.filter.Q.value=this.Q):"gain"===e?(this.gain=p(t(s,this.gain),-40,40),this.filter.gain.cancelScheduledValues(0),this.filter.gain.setValueAtTime(this.gain,n),this.filter.gain.value=this.gain):"detune"===e?(this.detune=t(s,this.detune),this.filter.detune?.cancelScheduledValues(0),this.filter.detune?.setValueAtTime(this.detune,n)):"frequency"===e?(this.frequency=p(t(s,this.frequency),0,16700),this.filter.frequency?.cancelScheduledValues(0),this.filter.frequency?.setValueAtTime(this.frequency,n),this.filter.frequency.value=this.frequency):"tracking"===e?this.tracking=i(s,this.tracking):"ratio"===e?this.ratio=t(s,this.ratio):super.updateParameter(e,s)}}V.FILTERS=["lowpass","highpass","bandpass","allpass","lowshelf","highshelf","peaking","notch","allpass"];class q extends y{constructor(e,t){super(e,t),this.inverter=e.createGain(),this.inverter.gain.value=-1,this.inverter.gain.setValueAtTime(-1,0),this.inverter.connect(this.level)}connect(e,t){e.level.connect(this.inverter)}destroy(){super.destroy(),this.inverter.disconnect()}}class P extends y{constructor(e,s){super(e,s),this.frequency=440,this.multiplier=1,this.detune=0,this.relative=!0,this.waveform="sine",this.waveform=a(s.waveform,"sine"),this.frequency=t(s.frequency,this.frequency),this.detune=t(s.detune,0),this.relative=i(s.relative,!0),this.multiplier=t(s.multiplier,this.multiplier),this.osc=e.createOscillator(),this.gain=new GainNode(e),this.shaper=e.createWaveShaper(),this.addModulator("detune",t(s["detune-mod"],500),this.osc.detune),this.addModulator("frequency",t(s["frequency-mod"],1e3),this.osc.frequency),this.addModulator("amplitude",t(s["amplitude-mod"],1),this.level.gain),this.gain.gain.value=.3,P.Waveforms.includes(this.waveform)||(this.waveform="sine"),this.osc.frequency.setValueAtTime(90,0),this.osc.type="sine",this.osc.start(),this.osc.connect(this.gain),this.shaper.connect(this.gain),this.gain.connect(this.level),this._updateWaveform(this.waveform)}_updateWaveform(e){P.Waveforms.includes(e)&&(this.waveform=e),this.osc.type="sine",P.BasicWaveforms.includes(e)?(this.osc.type=e,this.osc.disconnect(),this.osc.connect(this.gain)):P.PeriodicWaveforms.includes(e)?(this.osc.setPeriodicWave(this._createPeriodicWave(e)),this.osc.disconnect(),this.osc.connect(this.gain)):P.ShaperWaveforms.includes(e)&&(this.shaper.curve=this._createWaveShaper(e),this.osc.disconnect(),this.osc.connect(this.shaper),this.osc.type="pitched noise"===e?"sawtooth":"sine")}_createWaveShaper(e){var t,s=new Float32Array(256);switch(e){case"exp sin":t=e=>Math.pow(e,5);break;case"hump":t=e=>(e<0?0:e)-.5;break;default:t=e=>2*Math.random()-1}for(let e=0;e<s.length;e++)s[e]=t(2*e/s.length-1);return s}_createPeriodicWave(e){let t=new Array;switch(e){case"cello":t=[0,1,.5,.3,.5,.35,.2,.2,.1,.15,.15,.15];break;case"flute":t=[0,.5,.05,.3,.1];break;case"reed":t=[-.15,.5,1,.4,.6,.3,.25,.2];break;case"brass":t=[0,.8,.8,.85,.9,.8,.85,.7,.6,.4,.3,.25,.2,.1];break;case"glass":t=[0,1,0,.25,0,.5,0,.75,0,.8];break;case"vibraphone":t=[0,6,19,.8,13,3];break;case"camel":t.push(0);for(let e=1;e<20;e++)t.push(1/Math.pow(e,2));break;case"soft saw":t.push(-.1);for(let e=1;e<20;e++)t.push(1/e);break;case"soft square":t.push(0);for(let e=1;e<50;e++)t.push(1/e*(e%2));break;case"organ 1":t=[-.1,1,1,1];break;case"organ 2":t=[-.1,1,1,1,0,0,0,0,0,.8];break;case"organ 3":t=[0,1,0,0,0,0,.8,.8,.8,.8];break;case"buzz 1":t.push(0);let e=1;for(let s=1;s<100;s++)s%3==0||s%4==0?(t.push(1/e),e++):t.push(0);break;default:t.push(0),e=1;for(let s=1;s<100;s++)s%5==0||s%2==0?(t.push(.5/e),e++):t.push(0)}return this.osc.context.createPeriodicWave(t,new Float32Array(t.length))}playNote(e){let t=this.relative?e.frequency*this.multiplier:this.frequency;t=p(t,0,23999),this.osc.frequency?.setValueAtTime(t,this.context.currentTime),this.osc.detune?.setValueAtTime(this.detune,this.context.currentTime)}scheduleNote(e,t,s,i){t=t<0?0:t;let a=this.relative?e.frequency*this.multiplier:this.frequency;a=p(a,0,23999),this.osc.frequency?.setValueAtTime(a,t+this.context.currentTime),this.osc.detune?.setValueAtTime(this.detune,t+this.context.currentTime)}cancelNotes(){super.cancelNotes(),this.osc.frequency?.cancelScheduledValues(0),this.osc.detune?.cancelScheduledValues(0)}destroy(){super.destroy(),this.osc.stop(),this.osc.disconnect(),this.gain.disconnect(),this.shaper.disconnect()}pitchBend(e){const t=this.context.currentTime;this.osc.detune?.setTargetAtTime(this.detune+e,t,.1)}schedulePitchBend(e,t){t.apply(this.osc.detune,e,this.context,this.detune)}updateParameter(e,s){if("waveform"===e)this._updateWaveform(s);else if("relative"==e)this.relative=i(s,!0);else if("frequency"==e)this.frequency=t(s,this.frequency),this.osc.frequency?.setValueAtTime(this.frequency,this.context.currentTime);else if("multiplier"==e)if(this.relative){let e=this.osc.frequency.value/this.multiplier;this.multiplier=t(s,this.multiplier),this.multiplier>0&&(e*=this.multiplier),e=p(e,0,23999),this.osc.frequency?.setValueAtTime(e,this.context.currentTime)}else this.multiplier=t(s,this.multiplier);else"detune"==e?(this.detune=t(s,this.detune),this.osc.detune?.setValueAtTime(this.detune,this.context.currentTime)):super.updateParameter(e,s)}}P.BasicWaveforms=["sine","square","triangle","sawtooth"],P.PeriodicWaveforms=["cello","flute","reed","brass","glass","vibraphone","camel","organ 1","organ 2","organ 3","soft saw","soft square","buzz 1","buzz 2"],P.ShaperWaveforms=["pitched noise","exp sin","hump"],P.Waveforms=[...P.BasicWaveforms,...P.PeriodicWaveforms,...P.ShaperWaveforms];class C extends v{constructor(e,t){super(e,t)}}class E extends y{constructor(e,s){super(e,s),this.panner=new StereoPannerNode(e),this.panner.pan.setValueAtTime(t(s.pan,0),0),this.panner.connect(this.level),this.addModulator("pan",t(s["pan-mod"],.5),this.panner.pan)}connect(e,t){"audio"===t?e.level.connect(this.panner):super.connect(e,t)}destroy(){super.destroy(),this.panner.disconnect()}updateParameter(e,s){super.updateParameter(e,s),"pan"===e&&this.panner.pan.setValueAtTime(t(s,0),0)}}class R extends y{constructor(e,s){super(e,s),this.frequency=220,this.multiplier=1,this.detune=0,this.relative=!0;var a=new Float32Array(512);for(let e=0;e<a.length/2;e++)a[e]=-1,a[e+Math.floor(a.length/2)]=1;this.driver=new OscillatorNode(e),this.driver.type="sawtooth",this.gain=new GainNode(e),this.shaper=new WaveShaperNode(e),this.shaper.curve=a,this.csn=new ConstantSourceNode(e),this.addModulator("pulse width",1,this.csn.offset),this.addModulator("detune",t(s["detune-mod"],400),this.driver.detune),this.addModulator("frequency",t(s["frequency-mod"],100),this.driver.frequency),this.addModulator("amplitude",t(s["amplitude-mod"],1),this.level.gain),this.driver.connect(this.shaper),this.csn.connect(this.shaper),this.shaper.connect(this.gain),this.gain.connect(this.level),this.csn.offset.value=t(s["pulse width"],0),this.frequency=t(s.frequency,this.frequency),this.detune=t(s.detune,this.detune),this.relative=i(s.relative,this.relative),this.gain.gain.value=.3,this.driver.frequency.value=this.frequency,this.driver.detune.value=this.detune,this.csn.start(),this.driver.start()}playNote(e){let t=this.relative?e.frequency*this.multiplier:this.frequency;t=p(t,0,23999),this.driver.frequency.setValueAtTime(t,this.context.currentTime),this.driver.detune.setValueAtTime(this.detune,this.context.currentTime)}scheduleNote(e,t,s,i){t=t<0?0:t;let a=this.relative?e.frequency*this.multiplier:this.frequency;a=p(a,0,23999),this.driver.frequency.setValueAtTime(a,t+this.context.currentTime),this.driver.detune.setValueAtTime(this.detune,t+this.context.currentTime)}cancelNotes(){super.cancelNotes(),this.driver.frequency.cancelScheduledValues(0),this.driver.detune.cancelScheduledValues(0)}destroy(){super.destroy(),this.csn.stop(),this.csn.disconnect(),this.driver.stop(),this.driver.disconnect(),this.gain.disconnect(),this.shaper.disconnect()}pitchBend(e){const t=this.context.currentTime;this.driver.detune.setTargetAtTime(this.detune+e,t,.1)}schedulePitchBend(e,t){t.apply(this.driver.detune,e,this.context,this.detune)}updateParameter(e,s){if("relative"===e)this.relative=i(s,!0);else if("frequency"==e)this.frequency=t(s,this.frequency),this.driver.frequency.setValueAtTime(this.frequency,this.context.currentTime);else if("multiplier"===e)if(this.relative){let e=this.driver.frequency.value/this.multiplier;this.multiplier=t(s,this.multiplier),this.multiplier>0&&(e*=this.multiplier),e=p(e,0,23999),this.driver.frequency.setValueAtTime(e,this.context.currentTime)}else this.multiplier=t(s,this.multiplier);else"detune"===e?(this.detune=t(s,this.detune),this.driver.detune.setValueAtTime(this.detune,this.context.currentTime)):"pulse width"===e?this.csn.offset.value=t(s,0):super.updateParameter(e,s)}}class D{constructor(){}static hasSound(e){return D.sounds.has(e)}static getAudioBuffer(e){return D.sounds.get(e)}static async loadAudioBuffer(e){const t=D.context;if(D.hasSound(e))return D.getAudioBuffer(e);let s=e;s=s.endsWith(".ogg")||s.endsWith(".wav")?e:D.supportsAudioType("audio/ogg")?`${e}.ogg`:`${e}.wav`;try{let i=await fetch(s),a=await i.arrayBuffer(),n=await t.decodeAudioData(a);return D.sounds.set(e,n),n}catch(e){console.log(e)}}static async loadCustomSound(e){if(D.hasSound(e))return!0;const t=D.context;try{let s=await fetch(e),i=await s.arrayBuffer(),a=await t.decodeAudioData(i);return D.sounds.set(e,a),console.log("Loaded "+e),!0}catch(e){return console.log(e),!1}}static supportsAudioType(e){if(D._supports.has(e))return D._supports.get(e);let t=!1;const s=document.createElement("audio");return s.id="test-audio-node",document.body.append(s),"probably"!=s.canPlayType(e)&&"maybe"!=s.canPlayType(e)||(t=!0,document.querySelector("#test-audio-node")?.remove()),D._supports.set(e,t),t}}function B(e){return"object"==typeof e&&"sample"in e&&"string"==typeof e.sample&&"step"in e&&"number"==typeof e.step}D.sounds=new Map,D.context=m.init().context,D._supports=new Map;class I extends y{constructor(e,s){super(e,s),this.sources=new Array,this.playback=1,this.detune=0,this.sample_pack="piano",this.samples=new Array,this._rate=1,this.drumkit=!1,this.playback=t(s.playback,this.playback),this.detune=t(s.detune,this.detune),this.sample_pack=a(s["sample-pack"],this.sample_pack),this.dIn=new GainNode(e),this.pIn=new GainNode(e),this.dIn.gain.value=t(s["detune-mod"],1),this.pIn.gain.value=t(s["playback-mod"],1),"samples"in s&&Array.isArray(s.samples)&&this.loadSamplePack(s.samples)}loadSamplePack(e){this.samples=e.filter((e=>B(e))).sort(((e,t)=>e.step-t.step)),this.samples.forEach((e=>D.loadAudioBuffer(e.sample)))}static loadAudioBuffers(e,t){e.forEach((e=>D.loadAudioBuffer(e.sample)))}playNote(e){this.scheduleNote(e,0,0,0)}findBestSample(e){let t;if(this.drumkit)t=this.samples.find((t=>t.step===Math.round(e.note)));else{let s=1e5;for(const i of this.samples){if(i.step==e.note)return i;if(i.step>e.note){return i.step-e.note+3<s?i:t}{const a=e.note-i.step;a<s&&(t=i,s=a)}}}return t}scheduleNote(e,t,s,i){const a=t<0?-t:0;t=Math.max(0,t);const n=this.findBestSample(e);if(n){const r=D.getAudioBuffer(n.sample);if(r){const h=e.note-n.step,o=this.context.currentTime,c=Math.pow(2,h/12),l=new AudioBufferSourceNode(this.context);l.connect(this.level),this.sources.push(l),this.dIn.connect(l.detune),this.pIn.connect(l.playbackRate),l.buffer=r,l.playbackRate.value=c*this.playback,l.start(t+o,a),s>0&&l.stop(t+o+s+i),l.addEventListener("ended",(e=>{this.sources=this.sources.filter((e=>e!==l)),l.disconnect()})),r.duration,this.playback,this._rate=c}}}cancelNotes(){super.cancelNotes(),this.sources.forEach((e=>{e.stop(),e.disconnect()})),this.sources=new Array,this._rate=1}destroy(){super.destroy(),this.sources.forEach((e=>{e.stop(),e.disconnect()})),this.sources=new Array,this._rate=1}pitchBend(e){const t=this.context.currentTime;this.sources.forEach((s=>{s.detune?.setTargetAtTime(this.detune+e,t,.1)}))}schedulePitchBend(e,t){if(this.sources.length>0){const s=this.sources[this.sources.length-1];t.apply(s.detune,e,this.context,this.detune)}}connect(e,t){"detune"==t?e.level.connect(this.dIn):"playback"==t&&e.level.connect(this.pIn)}updateParameter(e,s){"playback"==e?(this.playback=t(s,this.playback),this.sources.forEach((e=>{e.playbackRate?.setValueAtTime(this._rate*this.playback,this.context.currentTime)}))):"detune"==e?(this.detune=t(s,this.detune),this.sources.forEach((e=>{e.detune?.setValueAtTime(this.detune,this.context.currentTime)}))):"sample-pack"==e||("playback-mod"==e?this.pIn.gain.value=t(s,1):"detune-mod"==e?this.dIn.gain.value=t(s,1):super.updateParameter(e,s))}}class G extends y{constructor(e,s){super(e,s),this.merger=e.createChannelMerger(2),this.leftGain=new GainNode(e),this.rightGain=new GainNode(e);let i=t(s["left-level"],0);this.leftGain.gain.setValueAtTime(r(i),0),i=t(s["right-level"],0),this.rightGain.gain?.setValueAtTime(r(i),0),this.leftGain.connect(this.merger,0,0),this.rightGain.connect(this.merger,0,1),this.merger.connect(this.level),this.addModulator("left-level",t(s["left-level-mod"],.5),this.leftGain.gain),this.addModulator("right-level",t(s["right-level-mod"],.5),this.rightGain.gain)}connect(e,t){"left"===t?e.level.connect(this.leftGain):"right"===t?e.level.connect(this.rightGain):super.connect(e,t)}destroy(){super.destroy(),this.merger.disconnect(),this.leftGain.disconnect(),this.rightGain.disconnect()}updateParameter(e,s){if(super.updateParameter(e,s),"left-level"===e){let e=t(s,0);this.leftGain.gain.setValueAtTime(r(e),0)}else if("right-level"==e){let e=t(s,0);this.rightGain.gain.setValueAtTime(r(e),0)}}}class O{constructor(e){this.id=0,this.free=0,this.nodes=new Map,this.release=0,this.gates=new Array,this.context=e,this.id=O._CHAIN_ID++,this.loadPatch(O._sine_patch)}playNote(e,t){const s=t.context.currentTime;this.free=31536e3,this.disconnect();const i=new GainNode(t.context);i.connect(t),i.gain.value=e.gain,i.gain.setValueAtTime(e.gain,s),this.out?.level.connect(i),this.gates.push({free:this.free,node:i}),this.nodes.forEach(((t,s,i)=>t.playNote(e)))}releaseNote(){this.nodes.forEach(((e,t,s)=>e.releaseNote()))}scheduleNote(e,t,s,i){const a=i.context.currentTime;this.free=a+t+s+this.release+.05;const n=new GainNode(i.context);n.connect(i),n.gain.value=0,n.gain?.setValueAtTime(0,0),n.gain?.setValueAtTime(e.gain,Math.max(a,a+t)),n.gain?.setValueAtTime(0,Math.max(a,a+t+s+this.release)),this.out?.level.connect(n),this.gates.push({free:this.free,node:n});try{this.nodes.forEach(((i,a,n)=>{i.scheduleNote(e,t,s,this.release)}))}catch(e){console.log("Note scheduling exception: $x")}for(let e=0;e<this.gates.length;e++)this.gates[e].free<a&&(this.gates[e].node?.disconnect(),this.out?.level.disconnect(this.gates[e].node),delete this.gates[e]);return this.gates=this.gates.filter((e=>void 0!==e)),this.release}disconnect(){this.out?.level.disconnect(),this.gates.forEach((e=>{e.node?.disconnect()})),this.gates=[]}cancelNotes(){this.disconnect(),this.nodes.forEach((e=>e.cancelNotes())),this.free=0}destroy(){this.disconnect(),this.nodes.forEach((e=>e.destroy())),this.nodes.clear()}pitchBend(e){this.nodes.forEach((t=>t.pitchBend(e)))}schedulePitchBend(e,t){this.nodes.forEach((s=>s.schedulePitchBend(e,t)))}loadPatch(e){if(this.nodes.clear(),this.out=void 0,this.release=0,Array.isArray(e.nodes))for(let t of e.nodes){let e=this.createSynthNode(this.context,t);e instanceof C&&(this.out=e),this.nodes.set(e.id,e)}this._updateReleaseValue();for(let t of e.routing){let e=this.nodes.get(t.source),s=this.nodes.get(t.dest);if(e&&s){let i=new b(e,t);e.addConnector(i),s.connect(i,a(t.type,""))}}}createSynthNode(e,t){switch(t.type){case"compressor":return new _(e,t);case"const":return new w(e,t);case"distortion":return new T(e,t);case"gain":return new y(e,t);case"inverter":return new q(e,t);case"lfo":const s=new P(e,t);return s.gain.gain.value=1,s;case"fm":case"osc":return new P(e,t);case"panner":return new E(e,t);case"pwm":return new R(e,t);case"delay":return new A(e,t);case"adsr":return new v(e,t);case"filter":return new V(e,t);case"out":return new C(e,t);case"sample":case"drums":return new I(e,t);case"stereo":return new G(e,t);default:return console.log(`Node not found: ${t.type}`),new y(e,t)}}getNodeById(e){return this.nodes.get(e)}updateParameter(e,t,s){let i=this.nodes.get(e);i?.updateParameter(t,s),this._updateReleaseValue()}updateConnectorLevel(e,t,s){let i=this.nodes.get(e);i?.updateConnectorLevel(t,s)}attachAnalyzer(e,t,s,i){let a=this.nodes.get(e);a?.attachAnalyzer(t,s,i)}detachAnalyzer(e,t){let s=this.nodes.get(e);s?.detachAnalyzer(t)}getFloatTimeDomainData(e,t,s,i){let a=this.nodes.get(e);a?.getFloatTimeDomainData(t,s,i)}_updateReleaseValue(){this.release=0,this.nodes.forEach((e=>{e instanceof v&&(this.release=Math.max(Math.max(e.A+e.D,e.R),this.release))}))}}O._CHAIN_ID=0,O._sine_patch={nodes:[{type:"out",A:.1,D:.1,S:.8,R:.15,id:0},{type:"osc",waveform:"sine",relative:"true",frequency:1,id:1,level:.1}],routing:[{source:1,dest:0,type:"out"}]},O._custom_patch={nodes:[{type:"out",id:0,A:0,D:.1,S:1,R:.3,level:0},{type:"sample","sample-pack":"custom",samples:[{sample:"<SOUNDURL>",step:60}],id:1,level:0}],routing:[{id:2,source:1,dest:0,type:"audio",level:0}]};class W{get waveRate(){return this.sampleRate/this.waveQuantum}get isEmpty(){return 0==this.waveform.length}get duration(){return this.waveform.length/this.waveRate}constructor(){this.waveform=new Array,this.sampleRate=44100,this.waveQuantum=128,this._top_path=new Array,this._bottom_path=new Array,this._wavelines=document.createElementNS("http://www.w3.org/2000/svg","g"),this._wavepath=document.createElementNS("http://www.w3.org/2000/svg","path")}appendSample(e){if(e.length>=2){this.waveform.push(e);const t=this.duration,s=Math.sign(e[1])*p(Math.sqrt(Math.abs(e[1])),0,1),i=Math.sign(e[0])*p(Math.sqrt(Math.abs(e[0])),0,1),a=document.createElementNS("http://www.w3.org/2000/svg","line");a.setAttribute("x1",`${t}`),a.setAttribute("x2",`${t}`),a.setAttribute("y1",`${s}`),a.setAttribute("y2",`${i}`),a.classList.add("waveline"),this._wavelines.append(a),this._top_path.push("L",t,s),this._bottom_path.unshift("L",t,i)}}appendBuffer(e){const t=e.getChannelData(0),s=e.numberOfChannels>1?e.getChannelData(1):t,i=this.waveQuantum;let a=0,n=0;for(let r=0;r<e.length;r++)a=Math.min(a,Math.min(t[r],s[r])),n=Math.max(n,Math.max(t[r],s[r])),(r+1)%i==0&&(this.appendSample([a,n]),n=0,a=0)}static fromBuffer(e){const t=new W;return t.appendBuffer(e),t}get wavepath(){const e=["M",0,0,...this._top_path,...this._bottom_path,"Z"].join(" ");return this._wavepath.setAttribute("d",e),this._wavepath}get wavelines(){return this._wavelines}}const z=16.3516,F=["C","C♯","D","D♯","E","F","F♯","G","G♯","A","A♯","B"],L=["rgb(229, 76, 78)","rgb(223, 132, 74)","rgb(228, 171, 81)","rgb(227, 199, 73)","rgb(223, 228, 78)","rgb(174, 215, 71)","rgb(63, 188, 70)","rgb(63, 169, 180)","rgb(64, 124, 180)","rgb(78, 69, 179)","rgb(141, 69, 183)","rgb(202, 69, 147)"];class Q{get note(){return this._note}set note(e){this._note=e}get end(){return this.start+this.duration}get octave(){return Math.floor(this.note/12)}set octave(e){this.note=12*e+this.step}get step(){return this.note%12}set step(e){this.note=12*this.octave+e}get cents(){return Math.round(100*(this.note-Math.floor(this.note)))}get velocity(){return this._velocity}set velocity(e){this._velocity=$(e,0,127)}get gain(){return this.velocity*this.velocity/16129}set gain(e){this.velocity=Math.sqrt(127*e*127)}get name(){return`${F[Math.floor(this.step)]}`}get accidental(){return this.name.substring(1)}get nameWithOctave(){return`${F[Math.round(this.step)]}${this.octave-1}`}get stepColor(){return L[Math.round(this.step)%L.length]}get rate(){return Math.pow(2,this.note/12)}get frequency(){return z*this.rate}set frequency(e){e>0&&(this.note=12*Math.log(e/z)/Math.LN2)}constructor(e){this._note=60,this.start=0,this.duration=1,this._velocity=90,this.note=e}isEqual(e){return this.note===e.note&&this.start===e.start&&this.duration===e.duration&&this.velocity===e.velocity}clone(){let e=new Q(this.note);return e.start=this.start,e.duration=this.duration,e.velocity=this.velocity,e}static fromName(e){const t=new Q(60);return t.octave=Q.nameToOctave(e),t.step=Q.nameToStep(e),t}static fromFrequency(e){const t=new Q(60);return t.frequency=e,t}static nameToOctave(e){if(2==e.length){let t=e.codePointAt(1);if(t)return $(t-48,0,8)}else if(e.length>2){let t=e.codePointAt(2);if(t)return $(t-48,0,8)}return 0}static nameToStep(e){return null==e||""==e?0:(e=e.length<=2?e[0].toUpperCase():e.substring(0,2).toUpperCase(),Math.max(0,F.indexOf(e)))}static nameToNote(e){if(e.length<2||e.length>3)return-1;e=e.replaceAll("#","♯");for(let t=0;t<12;t++)if(e.startsWith(F[t])){const s=e.substring(F[t].length);if(["0","1","2","3","4","5","6","7","8"].includes(s)){let e=s.codePointAt(0);return 12*((e||48)-48)+t}}return-1}}function $(e,t,s){return Math.max(t,Math.min(s,e))}class U{get length(){return this.trace.length}get isEmpty(){return 0===this.length}get beats(){return this._beats}get minNote(){return this._minNote}get minOctave(){return Math.max(0,Math.floor(this._minNote/12))}get maxNote(){return this._maxNote}get maxOctave(){return Math.max(0,Math.floor(this._minNote/12))}get noteRange(){return this.maxNote-this.minNote}get octaveRange(){return this.maxOctave-this.minOctave}get noteCount(){return this._noteCount}constructor(){this.trace=new Array,this._beats=0,this._playhead=0,this._minNote=-1,this._maxNote=-1,this._noteCount=0}clear(){this.trace=[],this._beats=0,this._minNote=-1,this._maxNote=-1,this._noteCount=0,this._playhead=0}fromPython(e){for(let t of e)this.addTraceEvent(t)}get messages(){return this.trace.filter((e=>"message"===e.params.get("type")))}get unitTests(){return this.trace.filter((e=>["pass","fail"].includes(e.params.get("type"))))}get passes(){return this.trace.filter((e=>"pass"===e.params.get("type")))}get fails(){return this.trace.filter((e=>"fail"===e.params.get("type")))}isEquivalent(e){if(this.length!==e.length)return!1;for(let t=0;t<this.length;t++)if(!this.trace[t].isEquivalent(e.trace[t]))return!1;return!0}addTraceEvent(e){this._addTraceEvent(j.fromMap(e))}_addTraceEvent(e){switch(this.trace.push(e),e.command){case j.PLAY:this._beats=Math.max(e.end,this._beats),this._playhead=e.end,(this._minNote<0||e.note.note<this._minNote)&&(this._minNote=e.note.note),this._maxNote=Math.max(this._maxNote,e.note.note),this._noteCount++;break;case j.SOUND:this._beats=Math.max(e.end,this._beats),this._playhead=e.end,this._noteCount++;break;case j.REST:this._beats=Math.max(e.end,this._beats),this._playhead=e.end}}getTraceGroup(e){return this.trace.filter((t=>t.trace_group===e))}}class j{get end(){return this.time+this.duration}constructor(e,t){this.time=0,this.duration=1,this.line=-1,this.note=new Q(60),this.trace_group=-1,this.params=new Map,this.id=j._TRACE_ID++,this.command=e,this.time=t}clone(){let e=new j(this.command,this.time);e.line=this.line,e.duration=this.duration,e.note=this.note.clone();for(let[t,s]of this.params)e.params.set(t,s);return e}static fromMap(e){let t=new j(String(e.get("command")),Math.max(0,Number(e.get("time"))));t.duration=Number(e.get("duration")),t.note.duration=t.duration;for(let[s,i]of e)if("note"===s&&"number"==typeof i)t.note.note=i;else if("pitch"===s&&"number"==typeof i)t.note.note=i+60;else if("velocity"===s&&"number"==typeof i)t.note.velocity=i;else if("sustain"===s&&"number"==typeof i)t.note.duration=Math.max(t.note.duration,i),t.duration=t.note.duration;else if("line"===s&&"number"==typeof i)t.line=i;else if("trace"===s)t.trace_group=i;else{if(["command","time","duration"].includes(s))continue;t.params.set(s,i)}return t}isEquivalent(e){if(this.command===e.command&&this.time===e.time&&this.duration===e.duration&&this.note.isEqual(e.note)){for(let[t,s]of this.params)if("line"!==t&&e.params.get(t)!==s)return!1;return!0}return!1}}j.PLAY="play",j.SOUND="sound",j.REST="rest",j.PUSH_FX="push_fx",j.POP_FX="pop_fx",j.MESSAGE="message",j._TRACE_ID=0;class X{constructor(e,t){this.released=!1,this.canceled=!1,this.note=e,this.chain=t}}const Y={start:0,beats:0,values:[]};class H{constructor(e,t){this.params=new Array,this.start=0,this.beats=-1,this.free=-1,this.id=H._EFFECT_ID++,this.name=e,this.oparams=t,this.start=Math.max(0,t.start),this.beats=t.beats,this.free=-1;for(const e of t.values){const t=Array();if(Array.isArray(e))for(const s of e)t.push(s);else"number"==typeof e&&t.push(e);this.params.push(t)}}static createEffect(e,t){return new J(t)}connect(e,t,s){return this.free=(s+this.start+this.beats+.1)*(60/t)+e.context.currentTime,this.node.connect(e),this.node}disconnect(){this.node.disconnect()}afterEffect(e,t,s,i,a){}clampParam(e,t,s){for(let i=0;i<e.length;i++)e[i]=p(e[i],t,s)}}H._EFFECT_ID=0;class J extends H{get node(){return this._node}constructor(e){super("empty",Y),this._node=new GainNode(e)}}class Z{get isAssigned(){return this.nodeId>=0}get value(){return p(this._value,this.minValue,this.maxValue)}set value(e){this._value=p(e,this.minValue,this.maxValue)}get percentValue(){return(this.value-this.minValue)/this.range}set percentValue(e){this.value=e*this.range+this.minValue}get range(){return this.maxValue-this.minValue}constructor(){this._value=1,this.nodeId=-1,this.name="",this.label="",this.slot=0,this.minValue=0,this.maxValue=1}static fromJSON(s){const i=new Z;return i.nodeId=e(s.node,-1),i.name=a(s.name,""),i.label=a(s.label,""),i.slot=e(s.slot,0),i.minValue=t(s.min,0),i.maxValue=t(s.max,1),i._value=p(t(s.value,1),i.minValue,i.maxValue),i}toJSON(){return{node:this.nodeId,name:this.name,label:this.label,slot:this.slot,min:this.minValue,max:this.maxValue,value:this.value}}}const K={nodes:[{type:"out",A:.05,D:.1,S:.8,R:.25,level:0,id:0},{type:"osc",waveform:"sine",relative:"true",frequency:1,id:1,level:.1}],routing:[{source:1,dest:0,type:"audio",level:0,id:1}],parameters:[],name:"Simple Sine",description:"",instrument:"piano",submenu:"",version:"2.0",format:"tunepad-patch",created:"2024-03-08 16:15:54.384",modified:"2024-03-08 16:15:54.385"},ee={patch_id:280,nodes:[{type:"out",A:.05,D:.1,S:.8,R:.25,level:0,id:0},{type:"osc",waveform:"sawtooth",relative:"true",frequency:1,id:1,level:.1}],routing:[{source:1,dest:0,type:"audio",level:0,id:1}],parameters:[],name:"Simple Saw",description:"",instrument:"piano",submenu:"",version:"2.0",format:"tunepad-patch",created:"2024-03-08 16:15:54.384",modified:"2024-03-08 16:15:54.385"},te={nodes:[{type:"out",A:.05,D:.1,S:.8,R:.25,level:0,id:0},{type:"osc",waveform:"square",relative:"true",frequency:1,id:1,level:.1}],routing:[{source:1,dest:0,type:"audio",level:0,id:1}],parameters:[],name:"Simple Square",description:"",instrument:"piano",submenu:"",version:"2.0",format:"tunepad-patch",created:"2024-03-08 16:15:54.384",modified:"2024-03-08 16:15:54.385"},se={nodes:[{type:"out",A:.05,D:.1,S:.8,R:.25,level:0,id:0},{type:"osc",waveform:"triangle",relative:"true",frequency:1,id:1,level:.1}],routing:[{source:1,dest:0,type:"audio",level:0,id:1}],parameters:[],name:"Simple Tri",description:"",instrument:"piano",submenu:"",version:"2.0",format:"tunepad-patch",created:"2024-03-08 16:15:54.384",modified:"2024-03-08 16:15:54.385"},ie={nodes:[{id:0,type:"out",A:0,D:.3,S:.5,R:.2,"a shape":3.4,"d shape":2,"r shape":2,level:0},{id:7,type:"osc",waveform:"sawtooth",relative:!0,frequency:440,multiplier:1,"frequency-mod":1e3,detune:0,"detune-mod":2,"amplitude-mod":.5,level:.1},{id:8,type:"filter","filter type":"lowpass",tracking:!0,frequency:980,"frequency-mod":100,Q:3,"Q-mod":10,gain:0,"gain-mod":250,"tracking ratio":1,level:0}],routing:[{id:26,source:7,dest:8,type:"audio",level:0},{id:25,source:8,dest:0,type:"audio",level:0}],parameters:[{node:8,name:"frequency",label:"FREQUENCY",slot:1,min:32,max:15e3,value:7e3},{node:8,name:"Q",label:"RESONANCE (Q)",slot:2,min:1e-4,max:50,value:50}],name:"Filtered Saw",instrument:"piano",version:"2.0",format:"tunepad-patch",created:"2024-05-30 17:44:15.448",modified:"2024-05-30 17:44:15.449"},ae={nodes:[{id:0,type:"out",cx:116.38970947265625,cy:86.873046875,A:.011363636363636362,D:.1,S:1,R:.005681818181818182,"a shape":4.000000000000001,"d shape":2,"r shape":2,level:0},{id:2,type:"osc",cx:13.176898002624512,cy:87.11394500732422,waveform:"square",relative:!0,frequency:440.00000000000034,multiplier:1,"frequency-mod":1e3,detune:0,"detune-mod":10,"amplitude-mod":.5,level:-5},{id:3,type:"lfo",cx:-87.84600448608398,cy:87.11394500732422,waveform:"sine",relative:!1,frequency:6.900000000000002,"frequency-mod":30,detune:0,"detune-mod":20,"amplitude-mod":.5,level:4.950595879501315}],routing:[{id:2,source:2,dest:0,type:"audio",level:0},{id:5,source:3,dest:2,type:"detune",level:5}],parameters:[],name:"Wobbly Square",description:"Created in patchworks",instrument:"piano",version:"2.0",format:"tunepad-patch",created:"2022-03-01 16:37:48.199",modified:"2022-03-01 17:34:23.146"};function ne(e){return"string"==typeof e.name&&Array.isArray(e.nodes)&&Array.isArray(e.routing)&&"2.0"===e.version&&"tunepad-patch"===e.format}class re{get bpm(){return this._bpm}set bpm(e){isNaN(e)||(this._bpm=p(e,5,300))}get voice(){return this.patch.name}constructor(e){this._bpm=90,this.notes=new Array,this.patch=K,this.bank=new Array,this.sound_gens=new Array,this.parameters=new Array,this._analyzers=new Map,this._effects=new Array,e&&this.loadPatch(e)}get isPlaying(){if(0===this.bank.length)return!1;{const e=this.bank[0].context.currentTime;for(const t of this.bank)if(t.free>e)return!0;return!1}}playNote(e,t){if(!t){t=m.init().context.destination}const s="number"==typeof e?new Q(e):e;let i=this._allocateGenerator(t.context,t.context.currentTime);i&&(i.cancelNotes(),i.playNote(s,t),this.notes.push(new X(s,i)))}releaseNote(e){const t="number"==typeof e?e:e.note;this.notes.forEach((e=>{e.note.note===t&&this._release(e)}))}releaseAll(){this.notes.forEach((e=>{this._release(e)}))}_release(e){if(e.released)return;e.released=!0,e.chain.releaseNote();const t=Math.ceil(1e3*e.chain.release)+100;setTimeout((()=>{this.notes=this.notes.filter((t=>t!==e)),e.chain.disconnect(),this._releaseGenerator(e.chain)}),t)}scheduleNote(e,t,s=0,i){if(!i){i=m.init().context.destination}const a="number"==typeof e?new Q(e):e,n=i.context.currentTime,r=a.duration*(60/this.bpm);t=(t+s)*(60/this.bpm);const h=this._allocateGenerator(i.context,n+t);return h?.scheduleNote(a,t,r,i),h}cancelAllNotes(){for(const e of this.bank)this._releaseGenerator(e);for(const e of this.sound_gens)e.cancelNotes();this.sound_gens=[]}scheduleNotes(e,t,s){const i=t.context.currentTime,a=Math.max(0,-s);for(let e=0;e<this._effects.length;e++){const t=this._effects[e];t.free>0&&t.free<i&&(t.disconnect(),delete this._effects[e])}this._effects=this._effects.filter((e=>void 0!==e));for(let e=0;e<this.sound_gens.length;e++){this.sound_gens[e].free<i&&delete this.sound_gens[e]}this.sound_gens=this.sound_gens.filter((e=>void 0!==e));const n=new Array,r=new J(t.context);r.beats=e.beats,n.push(r),this._effects.push(r),r.connect(t,this.bpm,s);for(const i of e.trace)if(i.command==j.PUSH_FX){const e=n[n.length-1],a=H.createEffect(i,t.context);a.connect(e.node,this.bpm,s),n.push(a),this._effects.push(a)}else if(i.command==j.POP_FX)n.pop();else if(i.command==j.PLAY&&i.end>=a){const e=n[n.length-1],t=this.scheduleNote(i.note,i.time,s,e.node);n.forEach((e=>{e.afterEffect(t,i.time,i.note.duration,this.bpm,s)}))}}scheduleMidiNotes(e,t,s,i=1){const a=window.performance.now(),n=Math.max(0,-t);for(const r of e.trace)if(r.command===j.PLAY&&r.end>=n){const e=r.note.clone();e.gain*=i;const n=r.note.duration*(60/this.bpm)*1e3,h=a+(r.time+t)*(60/this.bpm)*1e3,o=[144,Math.round(e.note),e.velocity],c=[128,Math.round(e.note),0];s.send(o,h),s.send(c,h+n)}}playMidiNote(e,t){const s="number"==typeof e?new Q(e):e,i=[144,Math.round(s.note),s.velocity];t.send(i,window.performance.now())}releaseMidiNote(e,t){const s="number"==typeof e?new Q(e):e,i=[128,Math.round(s.note),0];t.send(i,window.performance.now())}setMidiProgram(e,t){t>=0&&t<=127&&e.send([192,t])}cancelAllMidiNotes(e){const t=window.performance.now();for(let s=0;s<=127;s++)e.send([128,s,0],t);"clear"in e&&"function"==typeof e.clear&&e.clear()}pitchBend(e){this.notes.forEach((t=>t.chain.pitchBend(e)))}async loadPatch(e){if(ne(e))return await this._loadPatchData(e);if(e instanceof URL)return await this._loadPatchURL(e);switch(e){case"simple-saw":return await this._loadPatchData(ee);case"simple-sine":default:return await this._loadPatchData(K);case"simple-square":return await this._loadPatchData(te);case"simple-tri":return await this._loadPatchData(se);case"filtered-saw":return await this._loadPatchData(ie);case"wobbly-square":return await this._loadPatchData(ae)}}async _loadPatchURL(e){let t=await fetch(e),s=await t.json();return ne(s)?await this._loadPatchData(s,e.toString()):(this._loadPatchData(K),!1)}async _loadPatchData(e,t="./"){const s=t.split("/").slice(0,-1).join("/")+"/";this.patch=e,this.parameters=[],this._destroyAllGenerators(),this.sound_gens=[];for(const e of this.patch.nodes)if(Array.isArray(e.samples)){const t=e.samples.filter((e=>B(e))).sort(((e,t)=>e.step-t.step));t.forEach((e=>{e.sample=s+e.sample,D.loadAudioBuffer(e.sample)})),e.samples=t}else"reverb"===e.type?await D.loadCustomSound(e.impulse):"buffer source"===e.type&&await D.loadCustomSound(e.buffer);if(Array.isArray(this.patch.parameters))for(const e of this.patch.parameters)this.parameters.push(Z.fromJSON(e));return!0}updateParameter(e,t){let s=-1;for(let t of this.parameters)if(t.name===e){s=t.nodeId;break}if(!(s<0)){this.bank.forEach((i=>{i.updateParameter(s,e,t)}));for(const i of this.patch.nodes)i.id==s&&(i[e]=t)}}set attack(e){this.bank.forEach((t=>{t.out&&(t.out.A=Math.max(0,e))})),this.patch.nodes.filter((e=>"out"===e.type)).forEach((t=>t.A=Math.max(0,e)))}set decay(e){this.bank.forEach((t=>{t.out&&(t.out.D=Math.max(0,e))})),this.patch.nodes.filter((e=>"out"===e.type)).forEach((t=>t.D=Math.max(0,e)))}set sustain(e){this.bank.forEach((t=>{t.out&&(t.out.S=p(e,0,1))})),this.patch.nodes.filter((e=>"out"===e.type)).forEach((t=>t.S=p(e,0,1)))}set release(e){this.bank.forEach((t=>{t.out&&(t.out.R=Math.max(0,e))})),this.patch.nodes.filter((e=>"out"===e.type)).forEach((t=>t.R=Math.max(0,e)))}set volume(e){this.bank.forEach((t=>{t.out?.updateParameter("level",p(e,-50,5))})),this.patch.nodes.filter((e=>"out"===e.type)).forEach((t=>t.level=p(e,-50,5)))}_allocateGenerator(e,t){this.bank.length>0&&this.bank[0].context!=e&&this._destroyAllGenerators();for(const s of this.bank)if(s.free<t&&s.context==e)return this._analyzers.forEach((e=>{0==s.free&&s.attachAnalyzer(e.nodeId,e.connectorId,e.fftSize,e.channels)})),s;if(this.bank.length<re.MAX_GENERATORS){const t=new O(e);return t.loadPatch(this.patch),this.bank.push(t),this._analyzers.forEach((e=>{t.attachAnalyzer(e.nodeId,e.connectorId,e.fftSize,e.channels)})),t}}_releaseGenerator(e){e.cancelNotes(),this._analyzers.forEach((t=>{e.detachAnalyzer(t.nodeId,t.connectorId)}))}_destroyAllGenerators(){this.bank.forEach((e=>{e.destroy()})),this.bank=[]}}re.MAX_GENERATORS=24;class he{constructor(){this.synth=new re,this.queue=[],this.cache=new Map,setTimeout((()=>this._processReqest()),100)}static init(){return he.instance||(he.instance=new he),he.instance}static requestAudioBuffer(e){const t=he.init();return new Promise((s=>{const i=t.cache.get(e.uuid);i?s(i):(e._callback=s,t.queue.push(e))}))}static cancelRequest(e){const t=he.init();t.queue=t.queue.filter((t=>t.uuid!==e))}static clearCache(){he.instance?.cache.clear()}static clearCacheEntry(e){he.instance?.cache.delete(e)}async _processReqest(){const e=this.queue.shift();if(e){const t=this.cache.get(e.uuid);if(t&&e._callback)e._callback(t);else if(e.beats<=0){const t=new f;this.cache.set(e.uuid,t),e._callback&&e._callback(t)}else{const t=await this.recordIntoBuffer(e);this.cache.set(e.uuid,t),e._callback&&e._callback(t)}}setTimeout((()=>this._processReqest()),100)}async recordIntoBuffer(e){return new Promise((async t=>{const s=e.start?e.start:0,i=e.beats*(60/e.bpm),a=44100,n=Math.round(a*i),r=new f(2,a),h=new OfflineAudioContext(2,n,a);await h.audioWorklet.addModule("/js/AudioWorklets.js");const o=new AudioWorkletNode(h,"progress-monitor");let c=0;const l=new W;o.port.onmessage=t=>{const s=t.data[2]/n;e.waveform&&l.appendSample(t.data),s>c+.05&&(e.progress(Math.min(1,s)),e.waveform&&e.waveform(l),c=s)},o.connect(h.destination),this.synth.bpm=e.bpm,await this.synth.loadPatch(e.patch),this.synth.scheduleNotes(e.trace,o,s);const u=await h.startRendering();r.appendAudioBuffer(u),e.waveform&&e.waveform(l),e.progress(1),t(r)}))}}class oe{get velocity(){return this._velocity}set velocity(e){this._velocity=e,0===e&&9===this.code&&(this.code=8,this.message="note-off")}constructor(e){switch(this.code=0,this.note=-1,this._velocity=0,this.value=0,this.channel=0,this.code=e,e){case 9:this.message="note-on";break;case 8:this.message="note-off";break;case 14:this.message="pitch-bend";break;default:this.message="unknown"}}}class ce{static init(){ce.instance||(ce.instance=new ce)}static addListener(e){ce.listeners.add(e)}static removeListener(e){ce.listeners.delete(e)}static get ready(){return ce.init(),void 0!==ce.instance?.access}static get outputs(){return ce.init(),ce.instance?ce.instance._outputs:void 0}get _outputs(){return this.access?this.access.outputs:void 0}static get inputs(){return ce.init(),ce.instance?ce.instance._inputs:void 0}get _inputs(){return this.access?this.access.inputs:void 0}constructor(){navigator.requestMIDIAccess().then((e=>{this.access=e,console.log("Connected to MIDI."),e.addEventListener("statechange",(e=>this._midiConnection(e))),e.outputs.forEach((e=>e.open())),e.inputs.forEach((e=>e.onmidimessage=this._midiEvent))}),(()=>{console.log("Failed to initialize web MIDI.")}))}_midiConnection(e){const t=e.port;t&&("input"==t.type&&"connected"==t.state?t.onmidimessage=this._midiEvent:"output"==t.type&&"connected"==t.state&&t.open())}_midiEvent(e){if(e.data&&e.data.length>=2){const t=new oe(e.data[0]>>4);t.channel=15&e.data[0],t.note=e.data[1],e.data.length>=3&&(t.velocity=e.data[2]),"pitch-bend"===t.message&&e.data.length>=3&&(t.value=(e.data[2]<<7|127&e.data[1])-8192),ce.listeners.forEach((e=>e.onMidiInput(t)))}}}ce.listeners=new Set;export{he as AudioLoadingService,f as GrowableAudioBuffer,oe as MIDIEvent,ce as MIDIManager,U as MusicTrace,Q as Note,D as SoundLoader,O as SynthChain,re as Synthesizer,j as TraceEvent,m as TunePadAudio,W as WaveformData,p as clamp,r as dBToGain,o as dBToValue,c as gainToValue,h as gainTodB,n as mix,i as toBool,s as toDateTime,e as toInt,t as toNum,a as toStr,u as valueToGain,l as valueTodB,d as veloctyToGain};
//# sourceMappingURL=index.js.map
